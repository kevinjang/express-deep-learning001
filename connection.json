{
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  fedAuthRequired: false,
  fedAuthInfoToken: undefined,
  config: {
    server: 'localhost',
    authentication: { type: 'default', options: [Object] },
    options: {
      abortTransactionOnError: false,
      appName: undefined,
      camelCaseColumns: false,
      cancelTimeout: 5000,
      columnEncryptionKeyCacheTTL: 7200000,
      columnEncryptionSetting: false,
      columnNameReplacer: undefined,
      connectionRetryInterval: 500,
      connectTimeout: 15000,
      connectionIsolationLevel: 2,
      cryptoCredentialsDetails: {},
      database: undefined,
      datefirst: 7,
      dateFormat: 'mdy',
      debug: [Object],
      enableAnsiNull: true,
      enableAnsiNullDefault: true,
      enableAnsiPadding: true,
      enableAnsiWarnings: true,
      enableArithAbort: true,
      enableConcatNullYieldsNull: true,
      enableCursorCloseOnCommit: null,
      enableImplicitTransactions: false,
      enableNumericRoundabort: false,
      enableQuotedIdentifier: true,
      encrypt: true,
      fallbackToDefaultDb: false,
      encryptionKeyStoreProviders: undefined,
      instanceName: undefined,
      isolationLevel: 2,
      language: 'us_english',
      localAddress: undefined,
      maxRetriesOnTransientErrors: 3,
      multiSubnetFailover: false,
      packetSize: 4096,
      port: 1434,
      readOnlyIntent: false,
      requestTimeout: 15000,
      rowCollectionOnDone: false,
      rowCollectionOnRequestCompletion: false,
      serverName: undefined,
      serverSupportsColumnEncryption: false,
      tdsVersion: '7_4',
      textsize: '2147483647',
      trustedServerNameAE: undefined,
      trustServerCertificate: true,
      useColumnNames: false,
      useUTC: true,
      validateBulkLoadParameters: true,
      workstationId: undefined,
      lowerCaseGuids: false
    }
  },
  secureContext: SecureContext { context: SecureContext {} },
  inTransaction: false,
  transactionDescriptors: [ <Buffer 00 00 00 00 00 00 00 00> ],
  transactionDepth: 0,
  isSqlBatch: false,
  curTransientRetryCount: 0,
  transientErrorLookup: TransientErrorLookup {},
  closed: false,
  loggedIn: true,
  loginError: undefined,
  debug: Debug {
    _events: [Object: null prototype] { debug: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    options: { data: false, payload: false, packet: false, token: false },
    indent: '  ',
    [Symbol(kCapture)]: false
  },
  ntlmpacket: undefined,
  ntlmpacketBuffer: undefined,
  routingData: undefined,
  messageIo: MessageIO {
    _events: [Object: null prototype] {
      data: [Function (anonymous)],
      secure: [Function (anonymous)],
      error: [Function (anonymous)]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      [Symbol(async_id_symbol)]: 608,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    debug: Debug {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      options: [Object],
      indent: '  ',
      [Symbol(kCapture)]: false
    },
    tlsNegotiationComplete: true,
    incomingMessageStream: IncomingMessageStream {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _transformState: [Object],
      debug: [Debug],
      bl: [BufferListStream],
      currentMessage: undefined,
      [Symbol(kCapture)]: false
    },
    outgoingMessageStream: OutgoingMessageStream {
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      packetSize: 4096,
      debug: [Debug],
      bl: [BufferListStream],
      currentMessage: undefined,
      [Symbol(kCapture)]: false
    },
    securePair: { cleartext: [TLSSocket], encrypted: [DuplexSocket] },
    [Symbol(kCapture)]: false
  },
  state: {
    name: 'LoggedIn',
    events: { socketError: [Function: socketError] }
  },
  resetConnectionOnNextRequest: undefined,
  attentionReceived: undefined,
  request: undefined,
  procReturnStatusValue: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [Array],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    _events: [Object: null prototype] {
      end: [Array],
      error: [Array],
      close: [Array],
      data: [Function: ondata],
      unpipe: [Function: onunpipe],
      finish: [Function]
    },
    _eventsCount: 6,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: false,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      writable: true
    },
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: null,
    _server: null,
    [Symbol(async_id_symbol)]: 608,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  messageBuffer: <Buffer 00 00 1f 00 06 01 00 25 00 01 02 00 26 00 01 03 00 27 00 00 04 00 27 00 01 06 00 28 00 01 ff 0e 00 07 f5 00 00 01 00 00 00>,
  connectTimer: Timeout {
    _idleTimeout: -1,
    _idlePrev: null,
    _idleNext: null,
    _idleStart: 1468,
    _onTimeout: null,
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: true,
    [Symbol(refed)]: true,
    [Symbol(kHasPrimitive)]: false,
    [Symbol(asyncId)]: 597,
    [Symbol(triggerId)]: 595
  },
  cancelTimer: undefined,
  requestTimer: undefined,
  retryTimer: undefined,
  _cancelAfterRequestSent: [Function (anonymous)],
  [Symbol(kCapture)]: false
}